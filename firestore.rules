
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // /users/{userId}
    // Users can read/write their own document.
    // They can create their own document.
    match /users/{userId} {
      allow read, update, delete: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated();
    }

    // /users/{userId}/** (portfolios, strategies, etc.)
    // Users can manage all documents within their own user document.
    match /users/{userId}/{document=**} {
        allow read, write, delete: if isAuthenticated() && isOwner(userId);
    }
    
    // /saudi_stocks/{stockId}
    // Allow any authenticated user to read the stock prices.
    // Writes are disallowed from the client to protect the data.
    match /saudi_stocks/{stockId} {
      allow read: if isAuthenticated();
      allow write: if false; 
    }

    // /errors/{errorId}
    // Disallow all client-side access. Only backend functions can write here.
    match /errors/{errorId} {
        allow read, write: if false;
    }
  }
}
